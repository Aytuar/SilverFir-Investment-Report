/**
 * SilverFir: Investment Report üå≤ [Node.js Release]
 * https://fir.icu/
 * 
 * –ú–æ–¥—É–ª—å –ø–æ–∏—Å–∫–∞ –æ–±–ª–∏–≥–∞—Ü–∏–π –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º [bond_search_v2/index.js]
 * 
 * –ó–∞–ø—É—Å–∫ –ø–æ–¥ Linux: $ npm start
 * –ó–∞–ø—É—Å–∫ –ø–æ–¥ Windows: start.bat
 * –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: https://habr.com/ru/post/506720/ 
 *
 * @author Mikhail Shardin [–ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω] 
 * https://www.facebook.com/mikhail.shardin/
 * 
 * Last updated: 27.10.2020
 * 
 */

start()

async function start() {
    let startTime = (new Date()).getTime(); //–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ Unix Time Stamp - Epoch Converter
    console.log("–§—É–Ω–∫—Ü–∏—è %s –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—É –≤ %s. \n", getFunctionName(), (new Date()).toLocaleString())

    global.fetch = require("node-fetch")
    global.fs = require("fs")
    global.path = require('path')
    global.moment = require('moment')

    await MOEXsearchBonds()

    let currTime = (new Date()).getTime();
    let duration = Math.round((currTime - startTime) / 1000 / 60 * 100) / 100; //–≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö
    console.log("\n–§—É–Ω–∫—Ü–∏—è %s –∑–∞–∫–æ–Ω—á–∏–ª–∞ —Ä–∞–±–æ—Ç—É –≤ %s.", getFunctionName(), (new Date()).toLocaleString())
    console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è %s –≤ –º–∏–Ω—É—Ç–∞—Ö: %s.", getFunctionName(), duration)
}
module.exports.start = start;

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */

async function MOEXsearchBonds() { //–ø–æ–∏—Å–∫ –æ–±–ª–∏–≥–∞—Ü–∏–π –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    const YieldMore = 9 //–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const YieldLess = 13 //–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const PriceMore = 97 //–¶–µ–Ω–∞ –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const PriceLess = 103 //–¶–µ–Ω–∞ –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const DurationMore = 6 //–î—é—Ä–∞—Ü–∏—è –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const DurationLess = 36 //–î—é—Ä–∞—Ü–∏—è –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const VolumeMore = 500 //–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ n –¥–Ω–µ–π, —à—Ç. –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const conditions = `<li>${YieldMore}% < –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å < ${YieldLess}%</li>
                        <li>${PriceMore}% < –¶–µ–Ω–∞ < ${PriceLess}%</li>
                        <li>${DurationMore} –º–µ—Å. < –î—é—Ä–∞—Ü–∏—è < ${DurationLess} –º–µ—Å.</li> 
                        <li>–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ 15 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π (c ${moment().subtract(15, 'days').format('DD.MM.YYYY')}) > ${VolumeMore} —à—Ç.</li>
                        <li>–ü–æ–∏—Å–∫ –≤ –¢0, –¢+, –¢+ (USD) - –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º - –±–µ–∑–∞–¥—Ä–µ—Å.</li>`
    var bonds = [
        // ["BondName", "SECID", "BondPrice", "BondVolume", "BondYield", "BondDuration", "BondTax"],
    ]
    var count
    var log = `<li>–ü–æ–∏—Å–∫ –Ω–∞—á–∞—Ç ${new Date().toLocaleString()}.</li>`
    for (const t of [7, 58, 193]) { // https://iss.moex.com/iss/engines/stock/markets/bonds/boardgroups/
        const url = `https://iss.moex.com/iss/engines/stock/markets/bonds/boardgroups/${t}/securities.json?iss.dp=comma&iss.meta=off&iss.only=securities,marketdata&securities.columns=SECID,SECNAME,PREVLEGALCLOSEPRICE&marketdata.columns=SECID,YIELD,DURATION`
        console.log(`${getFunctionName()}. –°—Å—ã–ª–∫–∞ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π –≥—Ä—É–ø–ø—ã: ${url}.`)
        log += `<li><b>–°—Å—ã–ª–∫–∞ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π –≥—Ä—É–ø–ø—ã ${t}: <a target="_blank" rel="noopener noreferrer" href="${url}">${url}</a>.</b></li>`
        try {
            const response = await fetch(url)
            const json = await response.json()
            // if (json.marketdata.data[0][1] == 0) {
            //     console.log('%s. –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö c –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ.', getFunctionName())
            //     break
            // }
            let list = json.securities.data
            count = list.length
            console.log('%s. –í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ: %s –±—É–º–∞–≥.', getFunctionName(), count)
            log += '<li>–í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ: ' + count + ' –±—É–º–∞–≥.</li>'
            // for (var i = 0; i <= 200; i++) {
            for (var i = 0; i <= count - 1; i++) {
                BondName = json.securities.data[i][1].replace(/\"/g, '').replace(/\'/g, '')
                SECID = json.securities.data[i][0]
                BondPrice = json.securities.data[i][2]
                BondYield = json.marketdata.data[i][1]
                BondDuration = Math.floor((json.marketdata.data[i][2] / 30) * 100) / 100 // –∫–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–µ—Å—è—Ü–µ–≤ 
                console.log(`${getFunctionName()}. –°—Ç—Ä–æ–∫–∞ ${i + 1} –∏–∑ ${count}: ${BondName} (${SECID}): —Ü–µ–Ω–∞=${BondPrice}%, –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å=${BondYield}%.`)
                log += '<li>–°—Ç—Ä–æ–∫–∞ ' + (i + 1) + ' –∏–∑ ' + count + ': ' + BondName + ' (' + SECID + '): —Ü–µ–Ω–∞=' + BondPrice + '%, –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å=' + BondYield + '%.</li>'
                if (BondYield > YieldMore && BondYield < YieldLess && //—É—Å–ª–æ–≤–∏—è –≤—ã–±–æ—Ä–∫–∏
                    BondPrice > PriceMore && BondPrice < PriceLess &&
                    BondDuration > DurationMore && BondDuration < DurationLess) {
                    console.log(`${getFunctionName()}. \\-> –£—Å–ª–æ–≤–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ (${BondYield}%), —Ü–µ–Ω—ã (${BondPrice}%) –∏ –¥—é—Ä–∞—Ü–∏–∏ (${BondDuration} –º–µ—Å.) –ø—Ä–æ—à–ª–æ.`)
                    volume = await MOEXsearchVolume(SECID, VolumeMore)
                    BondVolume = volume.value
                    log += volume.log
                    if (volume.lowLiquid == 0) { // lowLiquid: 0 –∏ 1 –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏. 1 - –µ—Å–ª–∏ –∑–∞ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –¥–Ω–µ–π –æ–±–æ—Ä–æ—Ç –±—ã–ª –º–µ–Ω—å—à–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ
                        BondTax = await MOEXsearchTax(SECID)
                        bonds.push([BondName, SECID, BondPrice, BondVolume, BondYield, BondDuration, BondTax])
                        console.log('%s. C—Ç—Ä–æ–∫–∞ ‚Ññ %s: %s.', getFunctionName(), bonds.length, JSON.stringify(bonds[bonds.length - 1]))
                        log += '<li><b>–†–µ–∑—É–ª—å—Ç–∞—Ç ‚Ññ ' + bonds.length + ': ' + JSON.stringify(bonds[bonds.length - 1]) + '.</b></li>'
                    }
                }
            }
        } catch (e) {
            console.log(`–û—à–∏–±–∫–∞ –≤ ${getFunctionName()}: ${e}.`)
            log += '<li>–û—à–∏–±–∫–∞ –≤  ' + getFunctionName() + '.</li>'
        }
    }
    if (bonds == 0) {
        return "–í –º–∞—Å—Å–∏–≤–µ –Ω–µ—Ç —Å—Ç—Ä–æ–∫"
    }
    bonds.sort(function (x, y) { // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Å—Ç–æ–ª–±—Ü—É –û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç.
        var xp = x[3];
        var yp = y[3];
        return xp == yp ? 0 : xp > yp ? -1 : 1;
    });
    log += `<li>–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à—ë–Ω ${new Date().toLocaleString()}.</li>`

    console.log(`${getFunctionName()}. –í—ã–±–æ—Ä–∫–∞: ${JSON.stringify(bonds[0,1])}, ...`)
    await HTMLgenerate(bonds, conditions, log)
}
module.exports.MOEXsearchBonds = MOEXsearchBonds;

/**
 * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */

async function MOEXsearchTax(ID) { //–Ω–∞–ª–æ–≥–æ–≤—ã–µ –ª—å–≥–æ—Ç—ã –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π, –≤—ã–ø—É—â–µ–Ω–Ω—ã—Ö —Å 1 —è–Ω–≤–∞—Ä—è 2017 –≥–æ–¥–∞
    const url = `https://iss.moex.com/iss/securities/${ID}.json?iss.meta=off&iss.only=description`
    console.log('%s. –°—Å—ã–ª–∫–∞ –¥–ª—è %s: %s', getFunctionName(), ID, url)
    try {
        const response = await fetch(url)
        const json = await response.json()
        STARTDATEMOEX = json.description.data.find(e => e[0] === 'STARTDATEMOEX')[2];
        // DAYSTOREDEMPTION = json.description.data.find(e => e[0] === 'DAYSTOREDEMPTION')[2]; //–ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª-–≤–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π –ø–æ –ø–æ–≥–∞—à–µ–Ω–∏—è
        console.log("%s. –î–∞—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏ –≤ –°–ø–∏—Å–æ–∫ –¥–ª—è %s: %s.", getFunctionName(), ID, STARTDATEMOEX);
        const trueFalse = new Date(STARTDATEMOEX) > new Date('2017-01-01')
        return trueFalse
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ %s', getFunctionName())
    }
}
module.exports.MOEXsearchTax = MOEXsearchTax;

async function MOEXsearchVolume(ID, thresholdValue) { // –û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ n –¥–Ω–µ–π –±–æ–ª—å—à–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞
    now = new Date();
    DateRequestPrevious = moment().subtract(15, 'days').format('YYYY-MM-DD') // `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate() - 15}`; //—ç—Ç–æ—Ç –¥–µ–Ω—å n –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    const boardID = await MOEXboardID(ID)
    if (!boardID) {
        return
    }
    const url = `https://iss.moex.com/iss/history/engines/stock/markets/bonds/boards/${boardID}/securities/${ID}.json?iss.meta=off&iss.only=history&history.columns=SECID,TRADEDATE,VOLUME,NUMTRADES&limit=20&from=${DateRequestPrevious}`
    // numtrades - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫ —Å –±—É–º–∞–≥–æ–π
    // VOLUME - –æ–±–æ—Ä–æ—Ç –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –±—É–º–∞–≥ (–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç)
    var log = ''
    console.log('%s. –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—ä—ë–º–∞ —Å–¥–µ–ª–æ–∫ %s: %s', getFunctionName(), ID, url)
    log += `<li>–ü–æ–∏—Å–∫ –æ–±–æ—Ä–æ—Ç–∞. –°—Å—ã–ª–∫–∞: <a target="_blank" rel="noopener noreferrer" href="${url}">${url}</a>.</b></li>`
    try {
        const response = await fetch(url)
        const json = await response.json()
        let list = json.history.data
        let count = list.length
        var volume_sum = 0
        var lowLiquid = 0
        for (var i = 0; i <= count - 1; i++) {
            volume = json.history.data[i][2]
            volume_sum += volume
            if (thresholdValue > volume) {
                var lowLiquid = 1
                console.log(`${getFunctionName()}. –ù–∞ ${i+1}-–π –¥–µ–Ω—å –∏–∑ ${count} –æ–±–æ—Ä–æ—Ç –ø–æ –±—É–º–∞–≥–µ ${ID} –º–µ–Ω—å—à–µ —á–µ–º ${thresholdValue}: ${volume} —à—Ç.`)
                log += `<li>–ü–æ–∏—Å–∫ –æ–±–æ—Ä–æ—Ç–∞. –ù–∞ ${i+1}-–π –¥–µ–Ω—å –∏–∑ ${count} –æ–±–æ—Ä–æ—Ç –ø–æ –±—É–º–∞–≥–µ ${ID} –º–µ–Ω—å—à–µ —á–µ–º ${thresholdValue}: ${volume} —à—Ç.</li>`                
            }
        }
        console.log(`${getFunctionName()}. –í–æ –≤—Å–µ—Ö ${count} –¥–Ω—è—Ö –æ–±–æ—Ä–æ—Ç –ø–æ –±—É–º–∞–≥–µ ${ID} –±—ã–ª –±–æ–ª—å—à–µ, —á–µ–º ${thresholdValue} —à—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.`)
        console.log(`${getFunctionName()}. –ò—Ç–æ–≥–æ–≤—ã–π –æ–±–æ—Ä–æ—Ç –≤ –±—É–º–∞–≥–∞—Ö (–æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç) –∑–∞ ${count} –¥–Ω–µ–π: ${volume_sum} —à—Ç –Ω–∞—Ä–∞—Å—Ç–∞—é—â–∏–º –∏—Ç–æ–≥–æ–º.`)
        log += `<li>–ü–æ–∏—Å–∫ –æ–±–æ—Ä–æ—Ç–∞. –í–æ –≤—Å–µ—Ö ${count} –¥–Ω—è—Ö –æ–±–æ—Ä–æ—Ç –ø–æ –±—É–º–∞–≥–µ ${ID} –±—ã–ª –±–æ–ª—å—à–µ, —á–µ–º ${thresholdValue} —à—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.</li>`
        log += `<li>–ü–æ–∏—Å–∫ –æ–±–æ—Ä–æ—Ç–∞. –ò—Ç–æ–≥–æ–≤—ã–π –æ–±–æ—Ä–æ—Ç –≤ –±—É–º–∞–≥–∞—Ö (–æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç) –∑–∞ ${count} –¥–Ω–µ–π: ${volume_sum} —à—Ç –Ω–∞—Ä–∞—Å—Ç–∞—é—â–∏–º –∏—Ç–æ–≥–æ–º.</li>`
        return {
            lowLiquid: lowLiquid,
            value: volume_sum,
            log: log
        }
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ %s', getFunctionName())
    }
}
module.exports.MOEXsearchVolume = MOEXsearchVolume;

async function MOEXboardID(ID) { //—É–∑–Ω–∞–µ–º boardid –ª—é–±–æ–π –±—É–º–∞–≥–∏ –ø–æ —Ç–∏–∫–µ—Ä—É
    const url = `https://iss.moex.com/iss/securities/${ID}.json?iss.meta=off&iss.only=boards&boards.columns=secid,boardid,is_primary`
    try {
        const response = await fetch(url)
        const json = await response.json()
        boardID = json.boards.data.find(e => e[2] === 1)[1]
        console.log("%s. boardID –¥–ª—è %s: %s", getFunctionName(), ID, boardID);
        return boardID
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ %s', getFunctionName())
    }
}
module.exports.MOEXboardID = MOEXboardID;

/**
 * –û–±—â–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */

async function HTMLgenerate(bonds, conditions, log) { //–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ HTML https://developers.google.com/chart/interactive/docs/gallery/table?hl=ru
    const hmtl = `
    <!DOCTYPE html>
    <html lang="ru">

    <head>
        <meta charset="utf-8">
        <title>üïµÔ∏è –ú–æ—Å–±–∏—Ä–∂–∞. –§–∏–ª—å—Ç—Ä –æ–±–ª–∏–≥–∞—Ü–∏–π</title>
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
            google.charts.load('current', {
                'packages': ['table']
            });
            google.charts.setOnLoadCallback(drawTable);

            function drawTable() {
                var data = new google.visualization.DataTable();

                data.addColumn('string', '–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ');
                data.addColumn('string', '–ö–æ–¥ —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏');
                data.addColumn('number', '–¶–µ–Ω–∞, %');
                data.addColumn('number', '–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ —Å ${moment().subtract(15, 'days').format('DD.MM.YYYY')}, —à—Ç.');
                data.addColumn('number', '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å');
                data.addColumn('number', '–î—é—Ä–∞—Ü–∏—è, –º–µ—Å—è—Ü–µ–≤');
                data.addColumn('boolean', '–ï—Å—Ç—å –ª—å–≥–æ—Ç–∞?');
                data.addRows(
                    ${JSON.stringify(bonds).replace(/\"/g, '\'')}
                );
                var table = new google.visualization.Table(document.getElementById('table_div'));
                table.draw(data, {
                    showRowNumber: true,
                    width: '100%',
                    height: '100%',
                    sortColumn: 3,
                    sortAscending: false
                });
            }
        </script>
    </head>

    <body>
        <noscript>
            ${makeTableHTML(bonds)}
            <small>(JavaScript –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –æ—Ç–∫–ª—é—á—ë–Ω, –ø–æ—ç—Ç–æ–º—É —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è)</small>
        </noscript>
        <div id="table_div"></div>
        <p>–í—ã–±–æ—Ä–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ ${new Date().toLocaleString()} –ø–æ —É—Å–ª–æ–≤–∏—è–º üîé:
        <ul>
            ${conditions}
        </ul>
        –°–æ—Å—Ç–∞–≤–∏–ª <a href="https://www.facebook.com/mikhail.shardin" target="_blank"> –ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω</a>.</p>
        <details>
            <summary>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary><small>
                <ol>
                    ${log}
                </ol>
            </small>
        </details>
    </body>

    </html>`

    try {
        fs.writeFileSync(path.resolve(__dirname, `./bond_search_${moment().format('YYYY-MM-DD')}.html`), hmtl)
        console.log(`\n–ó–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ –¥–∏—Å–∫ —Å –∏–º–µ–Ω–µ–º ${moment().format('YYYY-MM-DD')}.html`)
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ %s', getFunctionName())
    }
}
module.exports.HTMLgenerate = HTMLgenerate;

function makeTableHTML(bonds) { //–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º html —Ç–∞–±–ª–∏—Ü—É –∏–∑ –º–∞—Å—Å–∏–≤–∞
    var result = `<table style="text-align: center; border: 1px solid green; border-collapse: collapse; border-style: hidden;">
        <tr>
            <td>–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</td>
            <td>–ö–æ–¥ —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏</td>
            <td>–¶–µ–Ω–∞, %</td>
            <td>–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç.</td>
            <td>–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å</td>
            <td>–î—é—Ä–∞—Ü–∏—è, –º–µ—Å—è—Ü–µ–≤</td>
            <td>–ï—Å—Ç—å –ª—å–≥–æ—Ç–∞?</td>
        </tr>`
    for (var i = 0; i < bonds.length; i++) {
        result += "<tr>";
        for (var j = 0; j < bonds[i].length; j++) {
            result += '<td style="border: 1px solid green;">' + bonds[i][j] + "</td>";
        }
        result += "</tr>";
    }
    result += "</table>";
    return result;
}

function getFunctionName() { //–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏
    return (new Error()).stack.split('\n')[2].split(' ')[5];
}
